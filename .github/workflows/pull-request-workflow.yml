name: PULL REQUEST WORKFLOW

on:
  pull_request:
    branches:
      - testing

jobs:
  app-tests:
    runs-on: ubuntu-latest
    services:
      mysql:
        image: mysql:8.0.21
        env:
          MYSQL_ALLOW_EMPTY_PASSWORD: yes
          MYSQL_DATABASE: test_db
        ports:
          - 3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3
    steps:
      - uses: actions/checkout@v1
      - name: Copy .env
        run: php -r "file_exists('.env') || copy('.env.example', '.env');"
      - name: Install Composer Dependencies
        run: composer install -q --no-ansi --no-interaction --no-scripts --no-suggest --no-progress --prefer-dist
      - name: Install NPM Dependencies
        run: npm install
      - name: Generate Key
        run: php artisan key:generate
      - name: Execute tests (Unit and Feature tests) via PHPUnit
        env:
          DB_PORT: ${{ job.services.mysql.ports[3306] }}
        run: vendor/bin/phpunit
  #      - name: "laravel-pint"
  #        uses: aglipanci/laravel-pint-action@2.0.0
  #        with:
  #          preset: laravel
  #          verboseMode: true
  #          testMode: true
  #          # configPath: "vendor/my-company/coding-style/pint.json"
  #          pintVersion: 1.8.0
  #          # onlyDirty: true
  build-js-testing:
    name: Build JS/CSS for TESTING server
    runs-on: ubuntu-latest
    needs: app-tests
    if: github.ref == 'refs/heads/testing'
    steps:
      - uses: actions/checkout@v1
      - name: NPM Build
        run: |
          npm install
          npm run dev
      - name: Put built assets in Artifacts
        uses: actions/upload-artifact@v1
        with:
          name: assets
          path: public
  deploy-testing:
    name: Deploy project to TESTING server
    runs-on: ubuntu-latest
    needs: [ build-js-testing, app-tests ]
    if: github.ref == 'refs/heads/testing'
    steps:
      - uses: actions/checkout@v1
      - name: Fetch built assets from Artifacts
        uses: actions/download-artifact@v1
        with:
          name: assets
          path: public
      - name: Setup PHP
        uses: shivammathur/setup-php@master
        with:
          php-version: 8.1
          extension-csv: mbstring, bcmath
      - name: Composer install
        run: composer install -q --no-ansi --no-interaction --no-scripts --no-suggest --no-progress --prefer-dist
      - name: Setup Deployer
        uses: atymic/deployer-php-action@master
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}
          ssh-known-hosts: ${{ secrets.SSH_KNOWN_HOSTS }}
      - name: Deploy to TESTING Server
        env:
          DOT_ENV: ${{ secrets.DOT_ENV_TESTING }}
        run: vendor/bin/dep deploy imta.io.vn --tag=${{ env.GITHUB_REF }} -vvv